---
let index = 0
---

<div>
  <slot />
</div>

<style is:global>
  details {
    max-width: 800px;
    box-sizing: border-box;

    border-radius: var(--radius-default);
    background: none;
    transition: box-shadow 0.3s 0s ease;
    box-shadow: 0px 0px 0px 0px #333;
  }

  details[open] {
    background: var(--active-bg);
  }

  details:focus-within {
    box-shadow: 0 0 0 4px #000, 0 0 0 6px #rgba(255, 255, 255, 0.2);
  }

  summary::marker {
    display: none;
  }

  summary {
    padding: var(--space-s) var(--space-xs) var(--space-2xs) var(--space-xs);
    display: flex;
    align-items: center;
    color: var(--font-color);
    position: relative;
    cursor: pointer;
    outline: transparent;

    transition: box-shadow 0.3s 0s ease;
  }

  summary .number {
    font-size: var(--fontsize-1);
    font-weight: bold;
    margin-right: 0.875rem;
    transition: 0.25s transform ease;
    display: flex;
    width: 1rem;
    height: 1rem;
    align-items: center;
    justify-content: center;
    padding: var(--space-2xs);
    background: var(--active-bg);
    border-radius: 100vw;
  }

  details[open] > summary .number {
    background: var(--action-color);
    color: var(--background-full);
  }

  summary .title {
    flex: 1;
    font-size: var(--fontsize-1);
    font-weight: bold;
  }

  details[open] > summary .icon {
    transform: rotate(180deg);
  }

  summary .icon {
    transition: 0.25s transform ease;
    display: flex;
    padding: var(--space-2xs);
    background: var(--active-bg);
    border-radius: 100vw;
  }

  details .content {
    border-top: none;
    padding: 0 var(--space-l) var(--space-xs) 0;
    padding-left: calc(var(--space-xs) * 2 + 2.225rem);
    border-top: none;
    font-size: var(--fontsize--1);
    line-height: 133%;
    color: var(--font-color);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const details = document.querySelectorAll('details')

    details.forEach((targetDetail) => {
      targetDetail.addEventListener('click', () => {
        details.forEach((detail) => {
          if (detail !== targetDetail && detail.open) {
            // Roep hier de sluitanimatie aan in plaats van direct het open-attribuut te verwijderen
            const summary = detail.querySelector('summary')
            const content = detail.querySelector('.content')

            const startHeight = `${detail.offsetHeight}px`
            const endHeight = `${summary.offsetHeight}px`

            detail.style.overflow = 'hidden'

            const animation = detail.animate(
              {
                height: [startHeight, endHeight],
              },
              {}
            )

            animation.onfinish = () => {
              detail.removeAttribute('open')
              detail.style.height = ''
              detail.style.overflow = ''
            }
          }
        })
      })
    })
  })
</script>
